name: Initialize Template

# Only runs once when repository is created from template
on:
  push:
    branches: [main]

jobs:
  initialize:
    if: github.repository != 'cto4ai/ai-first-docs'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - uses: actions/checkout@v4

      - name: Personalize repository
        run: |
          # Extract repository information
          REPO_NAME="${{ github.event.repository.name }}"
          GITHUB_ORG="${{ github.repository_owner }}"
          COMPANY_NAME="${{ github.repository_owner }}"
          DOCROOT="docs"
          ECOSYSTEM="claude"

          echo "üöÄ Personalizing repository for: $COMPANY_NAME / $REPO_NAME"

          # Replace variables in all markdown and JSON files
          echo "üìù Replacing template variables..."
          find . -type f \( -name "*.md" -o -name "*.json" -o -name "*.template" \) \
            ! -path "./.git/*" | while read file; do
            sed -i.bak \
              -e "s/{{REPO_NAME}}/$REPO_NAME/g" \
              -e "s/{{GITHUB_ORG}}/$GITHUB_ORG/g" \
              -e "s/{{COMPANY_NAME}}/$COMPANY_NAME/g" \
              -e "s/{{DOCROOT}}/$DOCROOT/g" \
              -e "s/{{ECOSYSTEM}}/$ECOSYSTEM/g" \
              "$file"
          done

          # Clean up backup files
          find . -name "*.bak" -delete
          echo "‚úÖ Template variables replaced"

          # Create .mcp-config.json from template
          if [ -f ".mcp-config.json.template" ]; then
            mv .mcp-config.json.template .mcp-config.json
            echo "‚úÖ .mcp-config.json created"
          fi

          # Create CLAUDE.md from template
          if [ -f "CLAUDE.md.template" ]; then
            mv CLAUDE.md.template CLAUDE.md
            echo "‚úÖ CLAUDE.md created"
          fi

          # Process docs/skills/README.md.template
          if [ -f "docs/skills/README.md.template" ]; then
            mv docs/skills/README.md.template docs/skills/README.md
            echo "‚úÖ docs/skills/README.md created"
          fi

          # Process any other .template files
          find . -name "*.template" -type f ! -path "./.git/*" | while read template; do
            target="${template%.template}"
            mv "$template" "$target"
            echo "‚úÖ Created ${target}"
          done

          # Swap README files
          echo "üìÑ Swapping README files..."
          rm README.md
          mv USER_README.md README.md
          echo "‚úÖ README.md swapped"

      - name: Create setup issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üöÄ AI-First Documentation Repository Initialized',
              body: `## Welcome to your AI-first documentation repository!

              Your repository has been automatically configured.

              ### ‚úÖ What's Ready
              - Documentation structure in \`docs/\`
              - MCP configuration with docroot = \`docs/\`
              - Simple document templates
              - Claude Ecosystem integration ready

              ### üìã Next Steps

              **1. Install Prerequisites**
              - [ ] Install [github-repos-manager-mcp](https://github.com/cto4ai/github-repos-manager-mcp) v3.0+
              - [ ] Install [github-docs-skill](https://github.com/cto4ai/claude-skills)

              **2. Configure MCP**
              See [\`.github/DOCUMENTATION/claude-ecosystem-setup.md\`](.github/DOCUMENTATION/claude-ecosystem-setup.md) for setup instructions.

              **3. Test Integration**
              \`\`\`
              You: "Get the catalog of documents in this repository"
              Claude: [Shows docs/ structure]
              \`\`\`

              **4. Start Documenting**
              - Use templates in \`docs/templates/\`
              - Work through AI (Claude Desktop or Claude.ai with Skills)
              - Or edit directly in GitHub

              ### üîÆ Future Features
              See [\`.github/DOCUMENTATION/future-features/\`](.github/DOCUMENTATION/future-features/) for planned enhancements like AI metadata frontmatter and auto-summary generation.

              ### üìñ Resources
              - [Setup Guide](.github/DOCUMENTATION/claude-ecosystem-setup.md) (when available)
              - [AI-First Strategy](.github/DOCUMENTATION/ai-first-strategy.md) (when available)
              - [Document Templates](docs/templates/)

              Close this issue when setup is complete!`
            })

      - name: Commit personalized changes
        run: |
          # Delete this initialization workflow
          rm .github/workflows/init-template.yml

          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Check if there are changes to commit
          if [[ -n $(git status --porcelain) ]]; then
            echo "üì¶ Committing personalized changes..."
            git add -A
            git commit -m "Initialize from ai-first-docs template

            - Replace template variables
            - Create .mcp-config.json from template
            - Create CLAUDE.md from template
            - Swap template README with repo README
            - Remove initialization workflow

            Repository: ${{ github.repository }}
            Owner: ${{ github.repository_owner }}"

            echo "‚¨ÜÔ∏è Pushing changes..."
            git push
            echo "‚úÖ Repository initialization complete!"
          else
            echo "‚ÑπÔ∏è No changes to commit"
          fi
